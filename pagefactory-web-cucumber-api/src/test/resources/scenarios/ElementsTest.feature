#language:ru
Функционал: Тесты простых элементов

  @button
  Сценарий: Тест WebButton
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * "кнопка 1" содержит "Button"
    * пользователь нажимает на "кнопка 1"
    * "текст для Кнопки 1" содержит "Simple button clicked"

  @checkbox
  Сценарий: Тест WebCheckbox
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * лейбл "Чекбокс" содержит "Accept"
    * "Чекбокс" доступен
    * "Чекбокс" не выделен
    * пользователь нажимает на "Чекбокс"
    * "Чекбокс" выделен
    * "текст для Чекбокса" содержит "Checkbox selected"

  @image
  Сценарий: Тест WebImage
    * выполнить сценарий "пользователь открывает домашнюю страницу"
    * "блок с Флагами -> испанский флаг" отображается

  @link
  Сценарий: Тест WebLink
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * "Ссылка 1" содержит "Link"
    * пользователь нажимает на "Ссылка 1"
    * "текст для Ссылки 1" содержит "Simple link clicked"

  @radio-group
  Сценарий: Тест WebRadioGroup
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * "Радио группа" отображается
    * в "Радио группа" кнопка с лейблом "Label 1" выделена
    * в "Радио группа" кнопка с индексом "1" выделена
    * в "Радио группа" кнопка с лейблом "1" присутствует
    * в "Радио группа" содержится "3" кнопки
    * пользователь выбирает в "Радио группа" кнопку с лейблом "Label 2"
    * в "Радио группа" кнопка с индексом "2" выделена
    * "текст для Радио группы" содержит "Label 2 selected"
    * пользователь выбирает в "Радио группа" кнопку с индексом "3"
    * в "Радио группа" кнопка с лейблом "Label 3" выделена
    * "текст для Радио группы" содержит "Label 3 selected"
    * в "Радио группа" содержится "2" кнопки
      | которые не выделены |

  @text-block
  Сценарий: Тест WebTextBlock
    * выполнить сценарий "пользователь открывает домашнюю страницу"
    * "текст Заголовок" содержит "текст"
    * "текст Описание" содержит "[подстрока]текст"

  @text-input
  Сценарий: Тест WebTextInput
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * лейбл "Поле ввода" содержит "Name"
    * "Поле ввода" доступно
    * пользователь нажимает на "Поле ввода"
    * свойство "плейсхолдер" элемента "Поле ввода" содержит "Your name"
    * "Поле ввода" содержит "[пустое поле]"
    * пользователь вводит в "Поле ввода" "Jack White"
    * "Поле ввода" содержит "Jack White"
    * пользователь очищает текст в "Поле ввода"
    * "Поле ввода" содержит "[пустое поле]"
    * пользователь вводит в "Поле ввода" "Jack Black"
    * "Поле ввода" содержит "Jack Black"
    * пользователь вводит в "Поле ввода" "[клавиши]ENTER"
    * "текст для Поля ввода" содержит "Jack Black"

  @button-with-hover
  Сценарий: Тест WebButtonWithHover
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * пользователь выполняет последовательность из "2" шагов
    * пользователь поочередно наводит курсор на
      | Кнопка 2 |
      | Ссылка 2 |
    * пользователь нажимает на "Ссылка 2"
    * "текст для Ссылки 2" содержит "Link for hover clicked"

  @file-input
  Сценарий: Тест WebFileInput
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * лейбл "Поле Загрузка файла" содержит "Export"
    * "Поле Загрузка файла" доступно
    * "Поле Загрузка файла" содержит "[пустое поле]"
    * пользователь вводит в "Поле Загрузка файла" "${[props] localFilename}"
    * "Поле Загрузка файла" содержит "${[props] localFilename}"
    * пользователь очищает текст в "Поле Загрузка файла"
    * "Поле Загрузка файла" содержит "[пустое поле]"
    * пользователь вводит в "Поле Загрузка файла" "${[props] localFilename}"
    * "Поле Загрузка файла" содержит "${[props] localFilename}"
    * пользователь отправляет форму "Поле Загрузка файла"

  @file-download
  Сценарий: Тест File download
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * пользователь удаляет файл "${[props] downloadedFileName}"
    * пользователь нажимает на "Ссылка Загрузки файла"
    * файл "${[props] downloadedFileName}" существует. Время проверки "30 секунд"

  @element-action
  Сценарий: Тест ElementAction
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * пользователь на "Блок Двойного клика" выполняет "DoubleClick"
    * "текст для Блока Двойного клика" содержит "Double click performed"

  @element-action
  Сценарий: Тест ElementInteraction
    * выполнить сценарий "пользователь открывает страницу Элементов"
    * пользователь на "Блок который перетаскивают" выполняет "Drag&Drop" к "Блок на который перетаскивают"
    * "текст для Блока Двойного клика" содержит "Double click performed"
